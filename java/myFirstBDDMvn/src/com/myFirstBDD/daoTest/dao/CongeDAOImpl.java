package com.myFirstBDD.daoTest.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import java.util.List;

import com.myFirstBDD.daoTest.domain.Conge;

public class CongeDAOImpl implements CongeDAO {
	
	Connection conn = null;
	Statement state = null;
	ResultSet rs = null;
	
	public CongeDAOImpl(Connection connection) {
		this .conn = connection;
	}

	@Override
	public Conge insertConge(Conge cp) {
		try {
			String insertSQL = "insert into conge(debut, empId, etat, fin) " + "values(?, ?, ?, ?)";
			PreparedStatement insertemp = conn.prepareStatement(insertSQL, Statement.RETURN_GENERATED_KEYS);
			insertemp.setDate(1, (Date) cp.getDebut());
			insertemp.setInt(2, cp.getEmpID());
			insertemp.setString(3, cp.getEtat());
			insertemp.setDate(4, (Date) cp.getFin());
			
			insertemp.executeUpdate();
			
			ResultSet tableKeys = insertemp.getGeneratedKeys();
			tableKeys.next();
			int autoGeneratedID = tableKeys.getInt(1);
			System.out.println("Generated key for new cp : " + autoGeneratedID + "\n");
			cp.setId(autoGeneratedID);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return cp;
	}

	@Override
	public List<Conge> getAllConge() throws SQLException {
		List<Conge> conges = new ArrayList<>();
		Conge cp = null;
		try {
			state = conn.createStatement();
			rs = state.executeQuery("SELECT * FROM conge");
			
			while (rs.next()) {
				cp = new Conge();
				cp.setDebut(rs.getDate("debut"));
				cp.setEmpID(rs.getInt("empId"));
				cp.setEtat(rs.getString("etat"));
				cp.setFin(rs.getDate("fin"));
				conges.add(cp);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return conges;
	}
	
	@Override
	public void removeConge(int id) {
		try {
			String sql = "delete from conge " + "where id = ?";
			PreparedStatement ps;
			ps = conn.prepareStatement(sql);
			ps.setInt(1, id);
			ps.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

}
